{"ast":null,"code":"var _jsxFileName = \"/home/jihyeon/React/todo/frontend/src/components/ColorPick.js\";\nimport React from \"react\";\nimport \"./ColorPick.css\"; //색상 선택 div함수\n\nconst ColorPick = ({\n  color,\n  onClick\n}) => {\n  //색 변수값으로 색상변경 함수\n  const checkColor = colorID => {\n    var selectedColor = null;\n    var selectedBackColor = null; //선택한 colorID가 blue일 때\n\n    if (colorID === \"blue\") {\n      //css변수(--blueColor)에 저장되어있는 값을 불러 저장\n      selectedColor = getComputedStyle(document.documentElement).getPropertyValue(\"--blueColor\"); //css변수(--blueBackColor)에 저장되어있는 값을 불러 저장\n\n      selectedBackColor = getComputedStyle(document.documentElement).getPropertyValue(\"--blueBackColor\");\n    } //선택한 colorID가 purple일 때\n    else if (colorID === \"purple\") {\n        //css변수(--blueColor)에 저장되어있는 값을 불러 저장\n        selectedColor = getComputedStyle(document.documentElement).getPropertyValue(\"--purpleColor\"); //css변수(--blueBackColor)에 저장되어있는 값을 불러 저장\n\n        selectedBackColor = getComputedStyle(document.documentElement).getPropertyValue(\"--purpleBackColor\");\n      } //선택한 colorID가 green일 때\n      else if (colorID === \"green\") {\n          //css변수(--blueColor)에 저장되어있는 값을 불러 저장\n          selectedColor = getComputedStyle(document.documentElement).getPropertyValue(\"--greenColor\"); //css변수(--blueBackColor)에 저장되어있는 값을 불러 저장\n\n          selectedBackColor = getComputedStyle(document.documentElement).getPropertyValue(\"--greenBackColor\");\n        } //선택한 colorID가 gray일 때\n        else if (colorID === \"gray\") {\n            //css변수(--blueColor)에 저장되어있는 값을 불러 저장\n            selectedColor = getComputedStyle(document.documentElement).getPropertyValue(\"--grayColor\"); //css변수(--blueBackColor)에 저장되어있는 값을 불러 저장\n\n            selectedBackColor = getComputedStyle(document.documentElement).getPropertyValue(\"--grayBackColor\");\n          } //위에 변수에 저장된 색을 css변수에 저장\n\n\n    document.documentElement.style.setProperty(\"--todoBackgroundColor\", selectedColor);\n    document.documentElement.style.setProperty(\"--backgroundColor\", selectedBackColor);\n  }; //처음 get해온 (현재 DB에 저장되어있는 색상 값으로 설정)\n\n\n  checkColor(color.colorId); //클릭 했을 때, DB에 클릭한 색상 값 저장\n\n  const onChangeColor = colorID => {\n    checkColor(colorID);\n    onClick(colorID);\n  };\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"ColorTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blueTemplate\",\n    onClick: e => onChangeColor(\"blue\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"purpleTemplate\",\n    onClick: e => onChangeColor(\"purple\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"greenTemplate\",\n    onClick: e => onChangeColor(\"green\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grayTemplate\",\n    onClick: e => onChangeColor(\"gray\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default ColorPick;","map":{"version":3,"sources":["/home/jihyeon/React/todo/frontend/src/components/ColorPick.js"],"names":["React","ColorPick","color","onClick","checkColor","colorID","selectedColor","selectedBackColor","getComputedStyle","document","documentElement","getPropertyValue","style","setProperty","colorId","onChangeColor","e"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./ColorPick.css\";\n\n//색상 선택 div함수\nconst ColorPick = ({ color, onClick }) => {\n  //색 변수값으로 색상변경 함수\n  const checkColor = (colorID) => {\n    var selectedColor = null;\n    var selectedBackColor = null;\n    //선택한 colorID가 blue일 때\n    if (colorID === \"blue\") {\n      //css변수(--blueColor)에 저장되어있는 값을 불러 저장\n      selectedColor = getComputedStyle(\n        document.documentElement\n      ).getPropertyValue(\"--blueColor\");\n      //css변수(--blueBackColor)에 저장되어있는 값을 불러 저장\n      selectedBackColor = getComputedStyle(\n        document.documentElement\n      ).getPropertyValue(\"--blueBackColor\");\n    }\n    //선택한 colorID가 purple일 때\n    else if (colorID === \"purple\") {\n      //css변수(--blueColor)에 저장되어있는 값을 불러 저장\n      selectedColor = getComputedStyle(\n        document.documentElement\n      ).getPropertyValue(\"--purpleColor\");\n      //css변수(--blueBackColor)에 저장되어있는 값을 불러 저장\n      selectedBackColor = getComputedStyle(\n        document.documentElement\n      ).getPropertyValue(\"--purpleBackColor\");\n    }\n    //선택한 colorID가 green일 때\n    else if (colorID === \"green\") {\n      //css변수(--blueColor)에 저장되어있는 값을 불러 저장\n      selectedColor = getComputedStyle(\n        document.documentElement\n      ).getPropertyValue(\"--greenColor\");\n      //css변수(--blueBackColor)에 저장되어있는 값을 불러 저장\n      selectedBackColor = getComputedStyle(\n        document.documentElement\n      ).getPropertyValue(\"--greenBackColor\");\n    }\n    //선택한 colorID가 gray일 때\n    else if (colorID === \"gray\") {\n      //css변수(--blueColor)에 저장되어있는 값을 불러 저장\n      selectedColor = getComputedStyle(\n        document.documentElement\n      ).getPropertyValue(\"--grayColor\");\n      //css변수(--blueBackColor)에 저장되어있는 값을 불러 저장\n      selectedBackColor = getComputedStyle(\n        document.documentElement\n      ).getPropertyValue(\"--grayBackColor\");\n    }\n\n    //위에 변수에 저장된 색을 css변수에 저장\n    document.documentElement.style.setProperty(\n      \"--todoBackgroundColor\",\n      selectedColor\n    );\n    document.documentElement.style.setProperty(\n      \"--backgroundColor\",\n      selectedBackColor\n    );\n  };\n\n  //처음 get해온 (현재 DB에 저장되어있는 색상 값으로 설정)\n  checkColor(color.colorId);\n\n  //클릭 했을 때, DB에 클릭한 색상 값 저장\n  const onChangeColor = (colorID) => {\n    checkColor(colorID);\n    onClick(colorID);\n  };\n  return (\n    <table className=\"ColorTable\">\n      <tbody>\n        <tr>\n          <td>\n            <div\n              className=\"blueTemplate\"\n              onClick={(e) => onChangeColor(\"blue\")}\n            ></div>\n          </td>\n          <td>\n            <div\n              className=\"purpleTemplate\"\n              onClick={(e) => onChangeColor(\"purple\")}\n            ></div>\n          </td>\n          <td>\n            <div\n              className=\"greenTemplate\"\n              onClick={(e) => onChangeColor(\"green\")}\n            ></div>\n          </td>\n          <td>\n            <div\n              className=\"grayTemplate\"\n              onClick={(e) => onChangeColor(\"gray\")}\n            ></div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default ColorPick;\n"]},"metadata":{},"sourceType":"module"}