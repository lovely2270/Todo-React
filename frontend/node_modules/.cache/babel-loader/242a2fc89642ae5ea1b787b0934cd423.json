{"ast":null,"code":"var _jsxFileName = \"/home/jihyeon/React/todo/frontend/src/modal/InputModel.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalFooter from \"react-bootstrap/ModalFooter\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\nexport default function Example() {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const showModal = () => {\n    setIsOpen(true);\n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Display Modal\"), /*#__PURE__*/React.createElement(Modal, {\n    show: isOpen,\n    onHide: hideModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Hi\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"The body\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: hideModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n}","map":{"version":3,"sources":["/home/jihyeon/React/todo/frontend/src/modal/InputModel.js"],"names":["React","ReactDOM","Modal","ModalBody","ModalHeader","ModalFooter","ModalTitle","Example","isOpen","setIsOpen","useState","showModal","hideModal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,KAAK,CAACU,QAAN,CAAe,KAAf,CAA5B;;AACA,QAAMC,SAAS,GAAG,MAAM;AACtBF,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFD;;AAIA,QAAMG,SAAS,GAAG,MAAM;AACtBH,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAIA,sBACE,uDACE;AAAQ,IAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,MAAb;AAAqB,IAAA,MAAM,EAAEI,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,eAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CALF,CAFF,CADF;AAeD","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalFooter from \"react-bootstrap/ModalFooter\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\n\nexport default function Example() {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const showModal = () => {\n    setIsOpen(true);\n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <button onClick={showModal}>Display Modal</button>\n      <Modal show={isOpen} onHide={hideModal}>\n        <Modal.Header>\n          <Modal.Title>Hi</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>The body</Modal.Body>\n        <Modal.Footer>\n          <button onClick={hideModal}>Cancel</button>\n          <button>Save</button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}