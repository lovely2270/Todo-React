{"ast":null,"code":"import * as api from \"../lib/api\";\nimport createRequestThunk from \"../lib/createRequestThunk\";\nimport { handleActions } from \"redux-actions\";\nconst GET_TODOS = \"apiModule/GET_TODOS\";\nconst GET_TODOS_SUCCESS = \"apiModule/GET_TODOS_SUCCESS\"; //const GET_TODOS_FAILURE = \"apiModule/GET_TODOS_FAILURE\";\n// export const getTodos = () => async (dispatch) => {\n//   dispatch({ type: GET_TODOS });\n//   try {\n//     const response = await api.getTodos;\n//     dispatch({\n//       type: GET_TODOS_SUCCESS,\n//       payload: response.data,\n//     });\n//   } catch (e) {\n//     dispatch({\n//       type: GET_TODOS_FAILURE,\n//       payload: e,\n//       error: true,\n//     });\n//     throw e;\n//   }\n// };\n\nexport const getTodos = createRequestThunk(GET_TODOS, api.getTodos);\nconst initialState = {};\nconst apiModule = handleActions({\n  [GET_TODOS]: (state, action) => ({ ...state,\n    loading: { ...state.loading,\n      GET_TODOS: true\n    }\n  }),\n  [GET_TODOS_SUCCESS]: (state, action) => ({ ...state,\n    loading: { ...state.loading,\n      GET_TODOS: false\n    },\n    todos: action.payload\n  }),\n  [GET_TODOS_SUCCESS]: (state, action) => ({ ...state,\n    loading: { ...state.loading,\n      GET_TODOS: false\n    }\n  })\n}, initialState);\nexport default apiModule;","map":{"version":3,"sources":["/home/jihyeon/React/todo/frontend/src/modules/apiModule.js"],"names":["api","createRequestThunk","handleActions","GET_TODOS","GET_TODOS_SUCCESS","getTodos","initialState","apiModule","state","action","loading","todos","payload"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,YAArB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,SAASC,aAAT,QAA8B,eAA9B;AAEA,MAAMC,SAAS,GAAG,qBAAlB;AACA,MAAMC,iBAAiB,GAAG,6BAA1B,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,QAAQ,GAAGJ,kBAAkB,CAACE,SAAD,EAAYH,GAAG,CAACK,QAAhB,CAAnC;AAEP,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,SAAS,GAAGL,aAAa,CAC7B;AACE,GAACC,SAAD,GAAa,CAACK,KAAD,EAAQC,MAAR,MAAoB,EAC/B,GAAGD,KAD4B;AAE/BE,IAAAA,OAAO,EAAE,EACP,GAAGF,KAAK,CAACE,OADF;AAEPP,MAAAA,SAAS,EAAE;AAFJ;AAFsB,GAApB,CADf;AAQE,GAACC,iBAAD,GAAqB,CAACI,KAAD,EAAQC,MAAR,MAAoB,EACvC,GAAGD,KADoC;AAEvCE,IAAAA,OAAO,EAAE,EACP,GAAGF,KAAK,CAACE,OADF;AAEPP,MAAAA,SAAS,EAAE;AAFJ,KAF8B;AAMvCQ,IAAAA,KAAK,EAAEF,MAAM,CAACG;AANyB,GAApB,CARvB;AAgBE,GAACR,iBAAD,GAAqB,CAACI,KAAD,EAAQC,MAAR,MAAoB,EACvC,GAAGD,KADoC;AAEvCE,IAAAA,OAAO,EAAE,EACP,GAAGF,KAAK,CAACE,OADF;AAEPP,MAAAA,SAAS,EAAE;AAFJ;AAF8B,GAApB;AAhBvB,CAD6B,EAyB7BG,YAzB6B,CAA/B;AA4BA,eAAeC,SAAf","sourcesContent":["import * as api from \"../lib/api\";\nimport createRequestThunk from \"../lib/createRequestThunk\";\nimport { handleActions } from \"redux-actions\";\n\nconst GET_TODOS = \"apiModule/GET_TODOS\";\nconst GET_TODOS_SUCCESS = \"apiModule/GET_TODOS_SUCCESS\";\n//const GET_TODOS_FAILURE = \"apiModule/GET_TODOS_FAILURE\";\n\n// export const getTodos = () => async (dispatch) => {\n//   dispatch({ type: GET_TODOS });\n//   try {\n//     const response = await api.getTodos;\n//     dispatch({\n//       type: GET_TODOS_SUCCESS,\n//       payload: response.data,\n//     });\n//   } catch (e) {\n//     dispatch({\n//       type: GET_TODOS_FAILURE,\n//       payload: e,\n//       error: true,\n//     });\n//     throw e;\n//   }\n// };\nexport const getTodos = createRequestThunk(GET_TODOS, api.getTodos);\n\nconst initialState = {};\n\nconst apiModule = handleActions(\n  {\n    [GET_TODOS]: (state, action) => ({\n      ...state,\n      loading: {\n        ...state.loading,\n        GET_TODOS: true,\n      },\n    }),\n    [GET_TODOS_SUCCESS]: (state, action) => ({\n      ...state,\n      loading: {\n        ...state.loading,\n        GET_TODOS: false,\n      },\n      todos: action.payload,\n    }),\n    [GET_TODOS_SUCCESS]: (state, action) => ({\n      ...state,\n      loading: {\n        ...state.loading,\n        GET_TODOS: false,\n      },\n    }),\n  },\n  initialState\n);\n\nexport default apiModule;\n"]},"metadata":{},"sourceType":"module"}