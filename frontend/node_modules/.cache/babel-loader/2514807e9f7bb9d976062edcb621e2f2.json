{"ast":null,"code":"import * as api from \"../lib/api\"; //import createRequestThunk from \"../lib/createRequestThunk\";\n\nimport { handleActions } from \"redux-actions\";\nconst GET_TODOS = \"apiRequest/GET_TODOS\";\nconst GET_TODOS_SUCCESS = \"apiRequest/GET_TODOS_SUCCESS\";\nconst GET_TODOS_FAILURE = \"apiRequest/GET_TODOS_FAILURE\";\nexport const getTodos = () => async dispatch => {\n  dispatch({\n    type: GET_TODOS\n  });\n\n  try {\n    const response = await api.getTodos;\n    dispatch({\n      type: GET_TODOS_SUCCESS,\n      payload: response.data\n    });\n  } catch (e) {\n    dispatch({\n      type: GET_TODOS_FAILURE,\n      payload: e,\n      error: true\n    });\n    throw e;\n  }\n}; // export const insertTodo = createRequestThunk(INSERT_TODO, api.insertTodos);\n\nconst initialState = {};\nconst apiModule = handleActions({\n  [GET_TODOS]: (state, action) => ({ ...state,\n    loading: { ...state.loading,\n      GET_TODOS: true\n    }\n  }),\n  [GET_TODOS_SUCCESS]: (state, action) => ({ ...state,\n    loading: { ...state.loading,\n      GET_TODOS: false\n    },\n    todos: action.payload\n  }),\n  [GET_TODOS_SUCCESS]: (state, action) => ({ ...state,\n    loading: { ...state.loading,\n      GET_TODOS: false\n    }\n  })\n}, initialState);\nexport default apiModule;","map":{"version":3,"sources":["/home/jihyeon/React/todo/frontend/src/modules/apiModule.js"],"names":["api","handleActions","GET_TODOS","GET_TODOS_SUCCESS","GET_TODOS_FAILURE","getTodos","dispatch","type","response","payload","data","e","error","initialState","apiModule","state","action","loading","todos"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,YAArB,C,CACA;;AACA,SAASC,aAAT,QAA8B,eAA9B;AAEA,MAAMC,SAAS,GAAG,sBAAlB;AACA,MAAMC,iBAAiB,GAAG,8BAA1B;AACA,MAAMC,iBAAiB,GAAG,8BAA1B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAMM,QAAQ,GAAG,MAAMR,GAAG,CAACK,QAA3B;AACAC,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,iBADC;AAEPM,MAAAA,OAAO,EAAED,QAAQ,CAACE;AAFX,KAAD,CAAR;AAID,GAND,CAME,OAAOC,CAAP,EAAU;AACVL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,iBADC;AAEPK,MAAAA,OAAO,EAAEE,CAFF;AAGPC,MAAAA,KAAK,EAAE;AAHA,KAAD,CAAR;AAKA,UAAMD,CAAN;AACD;AACF,CAhBM,C,CAiBP;;AAEA,MAAME,YAAY,GAAG,EAArB;AAEA,MAAMC,SAAS,GAAGb,aAAa,CAC7B;AACE,GAACC,SAAD,GAAa,CAACa,KAAD,EAAQC,MAAR,MAAoB,EAC/B,GAAGD,KAD4B;AAE/BE,IAAAA,OAAO,EAAE,EACP,GAAGF,KAAK,CAACE,OADF;AAEPf,MAAAA,SAAS,EAAE;AAFJ;AAFsB,GAApB,CADf;AAQE,GAACC,iBAAD,GAAqB,CAACY,KAAD,EAAQC,MAAR,MAAoB,EACvC,GAAGD,KADoC;AAEvCE,IAAAA,OAAO,EAAE,EACP,GAAGF,KAAK,CAACE,OADF;AAEPf,MAAAA,SAAS,EAAE;AAFJ,KAF8B;AAMvCgB,IAAAA,KAAK,EAAEF,MAAM,CAACP;AANyB,GAApB,CARvB;AAgBE,GAACN,iBAAD,GAAqB,CAACY,KAAD,EAAQC,MAAR,MAAoB,EACvC,GAAGD,KADoC;AAEvCE,IAAAA,OAAO,EAAE,EACP,GAAGF,KAAK,CAACE,OADF;AAEPf,MAAAA,SAAS,EAAE;AAFJ;AAF8B,GAApB;AAhBvB,CAD6B,EAyB7BW,YAzB6B,CAA/B;AA4BA,eAAeC,SAAf","sourcesContent":["import * as api from \"../lib/api\";\n//import createRequestThunk from \"../lib/createRequestThunk\";\nimport { handleActions } from \"redux-actions\";\n\nconst GET_TODOS = \"apiRequest/GET_TODOS\";\nconst GET_TODOS_SUCCESS = \"apiRequest/GET_TODOS_SUCCESS\";\nconst GET_TODOS_FAILURE = \"apiRequest/GET_TODOS_FAILURE\";\n\nexport const getTodos = () => async (dispatch) => {\n  dispatch({ type: GET_TODOS });\n  try {\n    const response = await api.getTodos;\n    dispatch({\n      type: GET_TODOS_SUCCESS,\n      payload: response.data,\n    });\n  } catch (e) {\n    dispatch({\n      type: GET_TODOS_FAILURE,\n      payload: e,\n      error: true,\n    });\n    throw e;\n  }\n};\n// export const insertTodo = createRequestThunk(INSERT_TODO, api.insertTodos);\n\nconst initialState = {};\n\nconst apiModule = handleActions(\n  {\n    [GET_TODOS]: (state, action) => ({\n      ...state,\n      loading: {\n        ...state.loading,\n        GET_TODOS: true,\n      },\n    }),\n    [GET_TODOS_SUCCESS]: (state, action) => ({\n      ...state,\n      loading: {\n        ...state.loading,\n        GET_TODOS: false,\n      },\n      todos: action.payload,\n    }),\n    [GET_TODOS_SUCCESS]: (state, action) => ({\n      ...state,\n      loading: {\n        ...state.loading,\n        GET_TODOS: false,\n      },\n    }),\n  },\n  initialState\n);\n\nexport default apiModule;\n"]},"metadata":{},"sourceType":"module"}