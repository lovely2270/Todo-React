{"ast":null,"code":"import { startLoading, finishLoading } from \"../modules/loading\";\nexport default function createRequestThunk(type, request) {\n  //성공 및 실패 액션 타입을 정의\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return params => async dispatch => {\n    dispatch({\n      type\n    }); //시작됨\n    //loading 리덕스 모듈에서 만든 액션 함수\n\n    dispatch(startLoading(type));\n\n    try {\n      const response = await request(params);\n      dispatch({\n        type: SUCCESS,\n        //해당 타입의 요청의 결과를 payload에 담음\n        payload: response.data\n      });\n      dispatch(finishLoading(type));\n    } catch (e) {\n      dispatch({\n        type: FAILURE,\n        payload: e,\n        error: true\n      });\n      dispatch(startLoading(type));\n      throw e;\n    }\n  };\n}","map":{"version":3,"sources":["/home/jihyeon/React/todo/frontend/src/lib/createRequestThunk.js"],"names":["startLoading","finishLoading","createRequestThunk","type","request","SUCCESS","FAILURE","params","dispatch","response","payload","data","e","error"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,oBAA5C;AAEA,eAAe,SAASC,kBAAT,CAA4BC,IAA5B,EAAkCC,OAAlC,EAA2C;AACxD;AACA,QAAMC,OAAO,GAAI,GAAEF,IAAK,UAAxB;AACA,QAAMG,OAAO,GAAI,GAAEH,IAAK,UAAxB;AAEA,SAAQI,MAAD,IAAY,MAAOC,QAAP,IAAoB;AACrCA,IAAAA,QAAQ,CAAC;AAAEL,MAAAA;AAAF,KAAD,CAAR,CADqC,CACjB;AACpB;;AACAK,IAAAA,QAAQ,CAACR,YAAY,CAACG,IAAD,CAAb,CAAR;;AACA,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAML,OAAO,CAACG,MAAD,CAA9B;AACAC,MAAAA,QAAQ,CAAC;AACPL,QAAAA,IAAI,EAAEE,OADC;AAEP;AACAK,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAHX,OAAD,CAAR;AAKAH,MAAAA,QAAQ,CAACP,aAAa,CAACE,IAAD,CAAd,CAAR;AACD,KARD,CAQE,OAAOS,CAAP,EAAU;AACVJ,MAAAA,QAAQ,CAAC;AACPL,QAAAA,IAAI,EAAEG,OADC;AAEPI,QAAAA,OAAO,EAAEE,CAFF;AAGPC,QAAAA,KAAK,EAAE;AAHA,OAAD,CAAR;AAKAL,MAAAA,QAAQ,CAACR,YAAY,CAACG,IAAD,CAAb,CAAR;AACA,YAAMS,CAAN;AACD;AACF,GArBD;AAsBD","sourcesContent":["import { startLoading, finishLoading } from \"../modules/loading\";\n\nexport default function createRequestThunk(type, request) {\n  //성공 및 실패 액션 타입을 정의\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n\n  return (params) => async (dispatch) => {\n    dispatch({ type }); //시작됨\n    //loading 리덕스 모듈에서 만든 액션 함수\n    dispatch(startLoading(type));\n    try {\n      const response = await request(params);\n      dispatch({\n        type: SUCCESS,\n        //해당 타입의 요청의 결과를 payload에 담음\n        payload: response.data,\n      });\n      dispatch(finishLoading(type));\n    } catch (e) {\n      dispatch({\n        type: FAILURE,\n        payload: e,\n        error: true,\n      });\n      dispatch(startLoading(type));\n      throw e;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}