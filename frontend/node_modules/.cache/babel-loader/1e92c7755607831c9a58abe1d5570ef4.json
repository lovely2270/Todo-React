{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport api, { //getTodos,\ninsertTodos, updateTodos, deleteTodos } from \"../lib/api\";\nimport { getTodos } from \"./apiRequest\"; //액션타입 정의하기\n\nconst CHANGE_INPUT = \"todos/CHANGE_INPUT\"; //인풋 값을 변경\n\nconst INSERT = \"todos/INSERT\"; //todo 등록\n\nconst TOGGLE = \"todos/TOGGLE\"; //todo 체크\n\nconst REMOVE = \"todos/REMOVE\"; //todo제거\n\nconst EDIT = \"todos/Edit\"; //todo수정\n//액션 생성함수 만들기\n\nexport const changeInput = createAction(CHANGE_INPUT, input => input);\nlet id = 1;\nexport const insert = createAction(INSERT, text => ({\n  id: id++,\n  text,\n  checked: false\n}));\nexport const toggle = createAction(TOGGLE, id => id);\nexport const remove = createAction(REMOVE, id => id);\nexport const edit = createAction(EDIT, id => id); //초기상태\n// const gettodos = [\n//   {\n//     userId: 1,\n//     id: 1,\n//     text: \"delectus aut autem\",\n//     completed: false,\n//   },\n//   {\n//     userId: 1,\n//     id: 2,\n//     text: \"quis ut nam facilis et officia qui\",\n//     completed: false,\n//   },\n// ];\n\nconst aa = getTodos();\nconsole.log(aa); // getTodos().then(function (text) {\n//   console.log(text);\n// });\n\nconst initialState = {\n  input: \"\",\n  todos: []\n}; //리듀서함수 만들기 (immer사용)\n\nconst todos = handleActions({\n  [CHANGE_INPUT]: (state, {\n    payload: input\n  }) => produce(state, draft => {\n    draft.input = input; //getTodos();\n  }),\n  [INSERT]: (state, {\n    payload: todo\n  }) => produce(state, draft => {\n    draft.todos.push(todo);\n    insertTodos(todo);\n  }),\n  [TOGGLE]: (state, {\n    payload: id\n  }) => produce(state, draft => {\n    const todo = draft.todos.find(todo => todo.id === id);\n    todo.checked = !todo.checked;\n    updateTodos(todo);\n  }),\n  [REMOVE]: (state, {\n    payload: id\n  }) => produce(state, draft => {\n    const index = draft.todos.findIndex(todo => todo.id === id);\n    draft.todos.splice(index, 1);\n    deleteTodos(id);\n  }),\n  [EDIT]: (state, {\n    payload: id\n  }) => produce(state, draft => {\n    const todo = draft.todos.find(todo => todo.id === id);\n    let newtext = window.prompt(\"ToDo 수정\", todo.text);\n    if (newtext != null) todo.text = newtext;\n    updateTodos(todo);\n  })\n}, initialState);\nexport default todos;","map":{"version":3,"sources":["/home/jihyeon/React/todo/frontend/src/modules/todos.js"],"names":["createAction","handleActions","produce","api","insertTodos","updateTodos","deleteTodos","getTodos","CHANGE_INPUT","INSERT","TOGGLE","REMOVE","EDIT","changeInput","input","id","insert","text","checked","toggle","remove","edit","aa","console","log","initialState","todos","state","payload","draft","todo","push","find","index","findIndex","splice","newtext","window","prompt"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport api, {\n  //getTodos,\n  insertTodos,\n  updateTodos,\n  deleteTodos,\n} from \"../lib/api\";\nimport { getTodos } from \"./apiRequest\";\n\n//액션타입 정의하기\nconst CHANGE_INPUT = \"todos/CHANGE_INPUT\"; //인풋 값을 변경\nconst INSERT = \"todos/INSERT\"; //todo 등록\nconst TOGGLE = \"todos/TOGGLE\"; //todo 체크\nconst REMOVE = \"todos/REMOVE\"; //todo제거\nconst EDIT = \"todos/Edit\"; //todo수정\n\n//액션 생성함수 만들기\nexport const changeInput = createAction(CHANGE_INPUT, (input) => input);\n\nlet id = 1;\nexport const insert = createAction(INSERT, (text) => ({\n  id: id++,\n  text,\n  checked: false,\n}));\n\nexport const toggle = createAction(TOGGLE, (id) => id);\n\nexport const remove = createAction(REMOVE, (id) => id);\n\nexport const edit = createAction(EDIT, (id) => id);\n\n//초기상태\n// const gettodos = [\n//   {\n//     userId: 1,\n//     id: 1,\n//     text: \"delectus aut autem\",\n//     completed: false,\n//   },\n//   {\n//     userId: 1,\n//     id: 2,\n//     text: \"quis ut nam facilis et officia qui\",\n//     completed: false,\n//   },\n// ];\nconst aa = getTodos();\nconsole.log(aa);\n// getTodos().then(function (text) {\n//   console.log(text);\n// });\nconst initialState = {\n  input: \"\",\n  todos: [],\n};\n\n//리듀서함수 만들기 (immer사용)\nconst todos = handleActions(\n  {\n    [CHANGE_INPUT]: (state, { payload: input }) =>\n      produce(state, (draft) => {\n        draft.input = input;\n        //getTodos();\n      }),\n    [INSERT]: (state, { payload: todo }) =>\n      produce(state, (draft) => {\n        draft.todos.push(todo);\n        insertTodos(todo);\n      }),\n    [TOGGLE]: (state, { payload: id }) =>\n      produce(state, (draft) => {\n        const todo = draft.todos.find((todo) => todo.id === id);\n        todo.checked = !todo.checked;\n        updateTodos(todo);\n      }),\n    [REMOVE]: (state, { payload: id }) =>\n      produce(state, (draft) => {\n        const index = draft.todos.findIndex((todo) => todo.id === id);\n        draft.todos.splice(index, 1);\n        deleteTodos(id);\n      }),\n    [EDIT]: (state, { payload: id }) =>\n      produce(state, (draft) => {\n        const todo = draft.todos.find((todo) => todo.id === id);\n        let newtext = window.prompt(\"ToDo 수정\", todo.text);\n        if (newtext != null) todo.text = newtext;\n        updateTodos(todo);\n      }),\n  },\n  initialState\n);\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}