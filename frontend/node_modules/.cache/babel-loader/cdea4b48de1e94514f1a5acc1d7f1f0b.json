{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport { insertTodo, updateTodo, deleteTodo, awaitGetTodos } from \"../lib/api\";\nimport * as api from \"../lib/api\";\nimport createRequestThunk from \"../lib/createRequestThunk\";\nimport axios from \"axios\"; //액션타입 정의하기\n\nconst CHANGE_INPUT = \"todos/CHANGE_INPUT\"; //인풋 값을 변경\n\nconst INSERT = \"todos/INSERT\"; //todo 등록\n\nconst TOGGLE = \"todos/TOGGLE\"; //todo 체크\n\nconst REMOVE = \"todos/REMOVE\"; //todo제거\n\nconst EDIT = \"todos/Edit\"; //todo수정\n\nconst GET_TODOS = \"todos/GET_TODOS\";\nconst GET_TODOS_SUCCESS = \"todos/GET_TODOS_SUCCESS\"; //액션 생성함수 만들기\n\nexport const changeInput = createAction(CHANGE_INPUT, input => input); //let id = 1;\n\nexport const insert = createAction(INSERT, text => ({\n  id: \"\",\n  text,\n  checked: false\n}));\nexport const toggle = createAction(TOGGLE, id => id);\nexport const remove = createAction(REMOVE, id => id);\nexport const edit = createAction(EDIT, id => id);\nexport const getTodos = createRequestThunk(GET_TODOS, api.getTodos);\nconst initialState = {\n  input: \"\",\n  todos: []\n};\n\nfunction insertAxios(todo) {\n  return axios.post(\"http://localhost:8080/todos\", todo).then(response => {\n    return response.data;\n  });\n} //리듀서함수 만들기 (immer사용)\n\n\nconst todos = handleActions({\n  [CHANGE_INPUT]: (state, {\n    payload: input\n  }) => produce(state, draft => {\n    draft.input = input;\n  }),\n  [INSERT]: (state, {\n    payload: todo\n  }) => produce(state, draft => {//insertTodo(todo);\n    //draft.todos.push(todo);\n    //console.log(insertTodo(todo));\n    // insertTodo(todo)\n    //   .then(function (response) {\n    //     console.log(response);\n    //     //console.log(state.todos);\n    //   })\n    //   .catch(function (error) {\n    //     console.log(error);\n    //   });\n  }),\n  [TOGGLE]: (state, {\n    payload: id\n  }) => produce(state, draft => {\n    const todo = draft.todos.find(todo => todo.id === id);\n    todo.checked = !todo.checked;\n    updateTodo(todo);\n  }),\n  [REMOVE]: (state, {\n    payload: id\n  }) => produce(state, draft => {\n    const index = draft.todos.findIndex(todo => todo.id === id); //draft.todos.splice(index, 1);\n\n    deleteTodo(id).then(function (response) {\n      console.log(state.todos);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }),\n  [EDIT]: (state, {\n    payload: id\n  }) => produce(state, draft => {\n    const todo = draft.todos.find(todo => todo.id === id);\n    let newtext = window.prompt(\"ToDo 수정\", todo.text);\n    if (newtext != null) todo.text = newtext;\n    updateTodo(todo);\n  }),\n  [GET_TODOS_SUCCESS]: (state, action) => ({ ...state,\n    todos: action.payload\n  })\n}, initialState);\nexport default todos;","map":{"version":3,"sources":["/home/jihyeon/React/todo/frontend/src/modules/todos.js"],"names":["createAction","handleActions","produce","insertTodo","updateTodo","deleteTodo","awaitGetTodos","api","createRequestThunk","axios","CHANGE_INPUT","INSERT","TOGGLE","REMOVE","EDIT","GET_TODOS","GET_TODOS_SUCCESS","changeInput","input","insert","text","id","checked","toggle","remove","edit","getTodos","initialState","todos","insertAxios","todo","post","then","response","data","state","payload","draft","find","index","findIndex","console","log","catch","error","newtext","window","prompt","action"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport { insertTodo, updateTodo, deleteTodo, awaitGetTodos } from \"../lib/api\";\nimport * as api from \"../lib/api\";\nimport createRequestThunk from \"../lib/createRequestThunk\";\nimport axios from \"axios\";\n\n//액션타입 정의하기\nconst CHANGE_INPUT = \"todos/CHANGE_INPUT\"; //인풋 값을 변경\nconst INSERT = \"todos/INSERT\"; //todo 등록\nconst TOGGLE = \"todos/TOGGLE\"; //todo 체크\nconst REMOVE = \"todos/REMOVE\"; //todo제거\nconst EDIT = \"todos/Edit\"; //todo수정\n\nconst GET_TODOS = \"todos/GET_TODOS\";\nconst GET_TODOS_SUCCESS = \"todos/GET_TODOS_SUCCESS\";\n\n//액션 생성함수 만들기\nexport const changeInput = createAction(CHANGE_INPUT, (input) => input);\n\n//let id = 1;\nexport const insert = createAction(INSERT, (text) => ({\n  id: \"\",\n  text,\n  checked: false,\n}));\n\nexport const toggle = createAction(TOGGLE, (id) => id);\n\nexport const remove = createAction(REMOVE, (id) => id);\n\nexport const edit = createAction(EDIT, (id) => id);\n\nexport const getTodos = createRequestThunk(GET_TODOS, api.getTodos);\n\nconst initialState = {\n  input: \"\",\n  todos: [],\n};\n\nfunction insertAxios(todo) {\n  return axios.post(\"http://localhost:8080/todos\", todo).then((response) => {\n    return response.data;\n  });\n}\n\n//리듀서함수 만들기 (immer사용)\nconst todos = handleActions(\n  {\n    [CHANGE_INPUT]: (state, { payload: input }) =>\n      produce(state, (draft) => {\n        draft.input = input;\n      }),\n    [INSERT]: (state, { payload: todo }) =>\n      produce(state, (draft) => {\n        //insertTodo(todo);\n        //draft.todos.push(todo);\n        //console.log(insertTodo(todo));\n        // insertTodo(todo)\n        //   .then(function (response) {\n        //     console.log(response);\n        //     //console.log(state.todos);\n        //   })\n        //   .catch(function (error) {\n        //     console.log(error);\n        //   });\n      }),\n    [TOGGLE]: (state, { payload: id }) =>\n      produce(state, (draft) => {\n        const todo = draft.todos.find((todo) => todo.id === id);\n        todo.checked = !todo.checked;\n        updateTodo(todo);\n      }),\n    [REMOVE]: (state, { payload: id }) =>\n      produce(state, (draft) => {\n        const index = draft.todos.findIndex((todo) => todo.id === id);\n        //draft.todos.splice(index, 1);\n        deleteTodo(id)\n          .then(function (response) {\n            console.log(state.todos);\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      }),\n    [EDIT]: (state, { payload: id }) =>\n      produce(state, (draft) => {\n        const todo = draft.todos.find((todo) => todo.id === id);\n        let newtext = window.prompt(\"ToDo 수정\", todo.text);\n        if (newtext != null) todo.text = newtext;\n        updateTodo(todo);\n      }),\n    [GET_TODOS_SUCCESS]: (state, action) => ({\n      ...state,\n      todos: action.payload,\n    }),\n  },\n  initialState\n);\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}